|g07_lab5
clk => G07_Lab3:stroke_stats.clk
clk => g07_speed_calories:power_stats.clk
clk => g07_controller:controller.clk
en => G07_Lab3:stroke_stats.en
en => g07_controller:controller.en
stroke_button => G07_Lab3:stroke_stats.stroke_in
reset_button => G07_Lab3:stroke_stats.reset
reset_button => g07_controller:controller.reset
start_stop_button => ~NO_FANOUT~
rowing_power_switch[0] => g07_speed_calories:power_stats.ROWER_POWER[0]
rowing_power_switch[1] => g07_speed_calories:power_stats.ROWER_POWER[1]
rowing_power_switch[2] => g07_speed_calories:power_stats.ROWER_POWER[2]
rowing_power_switch[3] => g07_speed_calories:power_stats.ROWER_POWER[3]
value_switch[0] => g07_controller:controller.switch[0]
value_switch[1] => g07_controller:controller.switch[1]
value_switch[2] => g07_controller:controller.switch[2]
seg1[0] <= g07_controller:controller.seg1[0]
seg1[1] <= g07_controller:controller.seg1[1]
seg1[2] <= g07_controller:controller.seg1[2]
seg1[3] <= g07_controller:controller.seg1[3]
seg1[4] <= g07_controller:controller.seg1[4]
seg1[5] <= g07_controller:controller.seg1[5]
seg1[6] <= g07_controller:controller.seg1[6]
seg2[0] <= g07_controller:controller.seg2[0]
seg2[1] <= g07_controller:controller.seg2[1]
seg2[2] <= g07_controller:controller.seg2[2]
seg2[3] <= g07_controller:controller.seg2[3]
seg2[4] <= g07_controller:controller.seg2[4]
seg2[5] <= g07_controller:controller.seg2[5]
seg2[6] <= g07_controller:controller.seg2[6]
seg3[0] <= g07_controller:controller.seg3[0]
seg3[1] <= g07_controller:controller.seg3[1]
seg3[2] <= g07_controller:controller.seg3[2]
seg3[3] <= g07_controller:controller.seg3[3]
seg3[4] <= g07_controller:controller.seg3[4]
seg3[5] <= g07_controller:controller.seg3[5]
seg3[6] <= g07_controller:controller.seg3[6]
seg4[0] <= g07_controller:controller.seg4[0]
seg4[1] <= g07_controller:controller.seg4[1]
seg4[2] <= g07_controller:controller.seg4[2]
seg4[3] <= g07_controller:controller.seg4[3]
seg4[4] <= g07_controller:controller.seg4[4]
seg4[5] <= g07_controller:controller.seg4[5]
seg4[6] <= g07_controller:controller.seg4[6]


|g07_lab5|G07_Lab3:stroke_stats
clk => g07_SECONDS_TIMER:pulser.clock
clk => G07_Stroke_Counter:stroke_counter.clock
en => g07_SECONDS_TIMER:pulser.enable
reset => g07_SECONDS_TIMER:pulser.reset
reset => G07_Stroke_Counter:stroke_counter.reset
stroke_in => G07_Stroke_Counter:stroke_counter.SPULSE
count[0] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[0]
count[1] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[1]
count[2] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[2]
count[3] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[3]
count[4] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[4]
count[5] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[5]
count[6] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[6]
count[7] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[7]
count[8] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[8]
count[9] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[9]
count[10] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[10]
count[11] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[11]
count[12] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[12]
count[13] <= G07_Stroke_Counter:stroke_counter.STROKE_COUNT[13]
rate[0] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[0]
rate[1] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[1]
rate[2] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[2]
rate[3] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[3]
rate[4] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[4]
rate[5] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[5]
rate[6] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[6]
rate[7] <= G07_Stroke_Counter:stroke_counter.STROKE_RATE[7]


|g07_lab5|G07_Lab3:stroke_stats|g07_SECONDS_TIMER:pulser
reset => sload.IN1
clock => LPM_COUNTER:counter.CLOCK
enable => LPM_COUNTER:counter.CNT_EN
TPULSE <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|G07_Lab3:stroke_stats|g07_SECONDS_TIMER:pulser|LPM_COUNTER:counter
clock => cntr_8fl:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_8fl:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_8fl:auto_generated.sload
data[0] => cntr_8fl:auto_generated.data[0]
data[1] => cntr_8fl:auto_generated.data[1]
data[2] => cntr_8fl:auto_generated.data[2]
data[3] => cntr_8fl:auto_generated.data[3]
data[4] => cntr_8fl:auto_generated.data[4]
data[5] => cntr_8fl:auto_generated.data[5]
data[6] => cntr_8fl:auto_generated.data[6]
data[7] => cntr_8fl:auto_generated.data[7]
data[8] => cntr_8fl:auto_generated.data[8]
data[9] => cntr_8fl:auto_generated.data[9]
data[10] => cntr_8fl:auto_generated.data[10]
data[11] => cntr_8fl:auto_generated.data[11]
data[12] => cntr_8fl:auto_generated.data[12]
data[13] => cntr_8fl:auto_generated.data[13]
data[14] => cntr_8fl:auto_generated.data[14]
data[15] => cntr_8fl:auto_generated.data[15]
data[16] => cntr_8fl:auto_generated.data[16]
data[17] => cntr_8fl:auto_generated.data[17]
data[18] => cntr_8fl:auto_generated.data[18]
data[19] => cntr_8fl:auto_generated.data[19]
data[20] => cntr_8fl:auto_generated.data[20]
data[21] => cntr_8fl:auto_generated.data[21]
data[22] => cntr_8fl:auto_generated.data[22]
data[23] => cntr_8fl:auto_generated.data[23]
data[24] => cntr_8fl:auto_generated.data[24]
data[25] => cntr_8fl:auto_generated.data[25]
data[26] => cntr_8fl:auto_generated.data[26]
data[27] => cntr_8fl:auto_generated.data[27]
data[28] => cntr_8fl:auto_generated.data[28]
data[29] => cntr_8fl:auto_generated.data[29]
data[30] => cntr_8fl:auto_generated.data[30]
data[31] => cntr_8fl:auto_generated.data[31]
data[32] => cntr_8fl:auto_generated.data[32]
data[33] => cntr_8fl:auto_generated.data[33]
data[34] => cntr_8fl:auto_generated.data[34]
data[35] => cntr_8fl:auto_generated.data[35]
data[36] => cntr_8fl:auto_generated.data[36]
data[37] => cntr_8fl:auto_generated.data[37]
data[38] => cntr_8fl:auto_generated.data[38]
data[39] => cntr_8fl:auto_generated.data[39]
cin => ~NO_FANOUT~
q[0] <= cntr_8fl:auto_generated.q[0]
q[1] <= cntr_8fl:auto_generated.q[1]
q[2] <= cntr_8fl:auto_generated.q[2]
q[3] <= cntr_8fl:auto_generated.q[3]
q[4] <= cntr_8fl:auto_generated.q[4]
q[5] <= cntr_8fl:auto_generated.q[5]
q[6] <= cntr_8fl:auto_generated.q[6]
q[7] <= cntr_8fl:auto_generated.q[7]
q[8] <= cntr_8fl:auto_generated.q[8]
q[9] <= cntr_8fl:auto_generated.q[9]
q[10] <= cntr_8fl:auto_generated.q[10]
q[11] <= cntr_8fl:auto_generated.q[11]
q[12] <= cntr_8fl:auto_generated.q[12]
q[13] <= cntr_8fl:auto_generated.q[13]
q[14] <= cntr_8fl:auto_generated.q[14]
q[15] <= cntr_8fl:auto_generated.q[15]
q[16] <= cntr_8fl:auto_generated.q[16]
q[17] <= cntr_8fl:auto_generated.q[17]
q[18] <= cntr_8fl:auto_generated.q[18]
q[19] <= cntr_8fl:auto_generated.q[19]
q[20] <= cntr_8fl:auto_generated.q[20]
q[21] <= cntr_8fl:auto_generated.q[21]
q[22] <= cntr_8fl:auto_generated.q[22]
q[23] <= cntr_8fl:auto_generated.q[23]
q[24] <= cntr_8fl:auto_generated.q[24]
q[25] <= cntr_8fl:auto_generated.q[25]
q[26] <= cntr_8fl:auto_generated.q[26]
q[27] <= cntr_8fl:auto_generated.q[27]
q[28] <= cntr_8fl:auto_generated.q[28]
q[29] <= cntr_8fl:auto_generated.q[29]
q[30] <= cntr_8fl:auto_generated.q[30]
q[31] <= cntr_8fl:auto_generated.q[31]
q[32] <= cntr_8fl:auto_generated.q[32]
q[33] <= cntr_8fl:auto_generated.q[33]
q[34] <= cntr_8fl:auto_generated.q[34]
q[35] <= cntr_8fl:auto_generated.q[35]
q[36] <= cntr_8fl:auto_generated.q[36]
q[37] <= cntr_8fl:auto_generated.q[37]
q[38] <= cntr_8fl:auto_generated.q[38]
q[39] <= cntr_8fl:auto_generated.q[39]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g07_lab5|G07_Lab3:stroke_stats|g07_SECONDS_TIMER:pulser|LPM_COUNTER:counter|cntr_8fl:auto_generated
clock => counter_reg_bit1a[39].CLK
clock => counter_reg_bit1a[38].CLK
clock => counter_reg_bit1a[37].CLK
clock => counter_reg_bit1a[36].CLK
clock => counter_reg_bit1a[35].CLK
clock => counter_reg_bit1a[34].CLK
clock => counter_reg_bit1a[33].CLK
clock => counter_reg_bit1a[32].CLK
clock => counter_reg_bit1a[31].CLK
clock => counter_reg_bit1a[30].CLK
clock => counter_reg_bit1a[29].CLK
clock => counter_reg_bit1a[28].CLK
clock => counter_reg_bit1a[27].CLK
clock => counter_reg_bit1a[26].CLK
clock => counter_reg_bit1a[25].CLK
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
data[25] => _.IN1
data[26] => _.IN1
data[27] => _.IN1
data[28] => _.IN1
data[29] => _.IN1
data[30] => _.IN1
data[31] => _.IN1
data[32] => _.IN1
data[33] => _.IN1
data[34] => _.IN1
data[35] => _.IN1
data[36] => _.IN1
data[37] => _.IN1
data[38] => _.IN1
data[39] => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT
q[25] <= counter_reg_bit1a[25].REGOUT
q[26] <= counter_reg_bit1a[26].REGOUT
q[27] <= counter_reg_bit1a[27].REGOUT
q[28] <= counter_reg_bit1a[28].REGOUT
q[29] <= counter_reg_bit1a[29].REGOUT
q[30] <= counter_reg_bit1a[30].REGOUT
q[31] <= counter_reg_bit1a[31].REGOUT
q[32] <= counter_reg_bit1a[32].REGOUT
q[33] <= counter_reg_bit1a[33].REGOUT
q[34] <= counter_reg_bit1a[34].REGOUT
q[35] <= counter_reg_bit1a[35].REGOUT
q[36] <= counter_reg_bit1a[36].REGOUT
q[37] <= counter_reg_bit1a[37].REGOUT
q[38] <= counter_reg_bit1a[38].REGOUT
q[39] <= counter_reg_bit1a[39].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[39].IN1


|g07_lab5|G07_Lab3:stroke_stats|G07_Stroke_Counter:stroke_counter
clock => STROKE_RATE[0]~reg0.CLK
clock => STROKE_RATE[1]~reg0.CLK
clock => STROKE_RATE[2]~reg0.CLK
clock => STROKE_RATE[3]~reg0.CLK
clock => STROKE_RATE[4]~reg0.CLK
clock => STROKE_RATE[5]~reg0.CLK
clock => STROKE_RATE[6]~reg0.CLK
clock => STROKE_RATE[7]~reg0.CLK
clock => strkcnt[0].CLK
clock => strkcnt[1].CLK
clock => strkcnt[2].CLK
clock => strkcnt[3].CLK
clock => strkcnt[4].CLK
clock => strkcnt[5].CLK
clock => strkcnt[6].CLK
clock => strkcnt[7].CLK
clock => strkcnt[8].CLK
clock => strkcnt[9].CLK
clock => strkcnt[10].CLK
clock => strkcnt[11].CLK
clock => strkcnt[12].CLK
clock => strkcnt[13].CLK
clock => splast.CLK
clock => rate_cnt[0].CLK
clock => rate_cnt[1].CLK
clock => rate_cnt[2].CLK
clock => rate_cnt[3].CLK
clock => rate_cnt[4].CLK
clock => rate_cnt[5].CLK
clock => rate_cnt[6].CLK
clock => rate_cnt[7].CLK
clock => cnt[0].CLK
clock => cnt[1].CLK
clock => cnt[2].CLK
clock => cnt[3].CLK
clock => cnt[4].CLK
clock => cnt[5].CLK
clock => cnt[6].CLK
clock => cnt[7].CLK
clock => cnt[8].CLK
clock => cnt[9].CLK
clock => cnt[10].CLK
clock => cnt[11].CLK
clock => cnt[12].CLK
clock => cnt[13].CLK
clock => cnt[14].CLK
clock => cnt[15].CLK
clock => cnt[16].CLK
clock => cnt[17].CLK
clock => cnt[18].CLK
clock => cnt[19].CLK
clock => cnt[20].CLK
clock => cnt[21].CLK
clock => cnt[22].CLK
clock => cnt[23].CLK
clock => cnt[24].CLK
clock => cnt[25].CLK
clock => cnt[26].CLK
clock => cnt[27].CLK
clock => cnt[28].CLK
clock => cnt[29].CLK
clock => cnt[30].CLK
clock => cnt[31].CLK
reset => STROKE_RATE[0]~reg0.ACLR
reset => STROKE_RATE[1]~reg0.ACLR
reset => STROKE_RATE[2]~reg0.ACLR
reset => STROKE_RATE[3]~reg0.ACLR
reset => STROKE_RATE[4]~reg0.ACLR
reset => STROKE_RATE[5]~reg0.ACLR
reset => STROKE_RATE[6]~reg0.ACLR
reset => STROKE_RATE[7]~reg0.ACLR
reset => strkcnt[0].ACLR
reset => strkcnt[1].ACLR
reset => strkcnt[2].ACLR
reset => strkcnt[3].ACLR
reset => strkcnt[4].ACLR
reset => strkcnt[5].ACLR
reset => strkcnt[6].ACLR
reset => strkcnt[7].ACLR
reset => strkcnt[8].ACLR
reset => strkcnt[9].ACLR
reset => strkcnt[10].ACLR
reset => strkcnt[11].ACLR
reset => strkcnt[12].ACLR
reset => strkcnt[13].ACLR
reset => splast.ACLR
reset => rate_cnt[0].ACLR
reset => rate_cnt[1].ACLR
reset => rate_cnt[2].ACLR
reset => rate_cnt[3].ACLR
reset => rate_cnt[4].ACLR
reset => rate_cnt[5].ACLR
reset => rate_cnt[6].ACLR
reset => rate_cnt[7].ACLR
reset => cnt[0].ACLR
reset => cnt[1].ACLR
reset => cnt[2].ACLR
reset => cnt[3].ACLR
reset => cnt[4].ACLR
reset => cnt[5].ACLR
reset => cnt[6].ACLR
reset => cnt[7].ACLR
reset => cnt[8].ACLR
reset => cnt[9].ACLR
reset => cnt[10].ACLR
reset => cnt[11].ACLR
reset => cnt[12].ACLR
reset => cnt[13].ACLR
reset => cnt[14].ACLR
reset => cnt[15].ACLR
reset => cnt[16].ACLR
reset => cnt[17].ACLR
reset => cnt[18].ACLR
reset => cnt[19].ACLR
reset => cnt[20].ACLR
reset => cnt[21].ACLR
reset => cnt[22].ACLR
reset => cnt[23].ACLR
reset => cnt[24].ACLR
reset => cnt[25].ACLR
reset => cnt[26].ACLR
reset => cnt[27].ACLR
reset => cnt[28].ACLR
reset => cnt[29].ACLR
reset => cnt[30].ACLR
reset => cnt[31].ACLR
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
TPULSE => cnt.OUTPUTSELECT
SPULSE => process_0.IN1
SPULSE => splast.DATAIN
STROKE_COUNT[0] <= strkcnt[0].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[1] <= strkcnt[1].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[2] <= strkcnt[2].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[3] <= strkcnt[3].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[4] <= strkcnt[4].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[5] <= strkcnt[5].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[6] <= strkcnt[6].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[7] <= strkcnt[7].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[8] <= strkcnt[8].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[9] <= strkcnt[9].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[10] <= strkcnt[10].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[11] <= strkcnt[11].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[12] <= strkcnt[12].DB_MAX_OUTPUT_PORT_TYPE
STROKE_COUNT[13] <= strkcnt[13].DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[0] <= STROKE_RATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[1] <= STROKE_RATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[2] <= STROKE_RATE[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[3] <= STROKE_RATE[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[4] <= STROKE_RATE[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[5] <= STROKE_RATE[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[6] <= STROKE_RATE[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STROKE_RATE[7] <= STROKE_RATE[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_speed_calories:power_stats
clk => LPM_ROM:crc_table.INCLOCK
clk => CALORIE_RATE[0]~reg0.CLK
clk => CALORIE_RATE[1]~reg0.CLK
clk => CALORIE_RATE[2]~reg0.CLK
clk => CALORIE_RATE[3]~reg0.CLK
clk => CALORIE_RATE[4]~reg0.CLK
clk => CALORIE_RATE[5]~reg0.CLK
clk => CALORIE_RATE[6]~reg0.CLK
clk => CALORIE_RATE[7]~reg0.CLK
clk => CALORIE_RATE[8]~reg0.CLK
clk => CALORIE_RATE[9]~reg0.CLK
clk => CALORIE_RATE[10]~reg0.CLK
clk => CALORIE_RATE[11]~reg0.CLK
clk => BOAT_SPEED[0]~reg0.CLK
clk => BOAT_SPEED[1]~reg0.CLK
clk => BOAT_SPEED[2]~reg0.CLK
clk => BOAT_SPEED[3]~reg0.CLK
clk => BOAT_SPEED[4]~reg0.CLK
clk => BOAT_SPEED[5]~reg0.CLK
clk => BOAT_SPEED[6]~reg0.CLK
clk => BOAT_SPEED[7]~reg0.CLK
clk => BOAT_SPEED[8]~reg0.CLK
clk => BOAT_SPEED[9]~reg0.CLK
clk => BOAT_SPEED[10]~reg0.CLK
clk => BOAT_SPEED[11]~reg0.CLK
clk => full_CALORIE_RATE[8].CLK
clk => full_CALORIE_RATE[9].CLK
clk => full_CALORIE_RATE[10].CLK
clk => full_CALORIE_RATE[11].CLK
clk => full_CALORIE_RATE[12].CLK
clk => full_CALORIE_RATE[13].CLK
clk => full_CALORIE_RATE[14].CLK
clk => full_CALORIE_RATE[15].CLK
clk => full_CALORIE_RATE[16].CLK
clk => full_CALORIE_RATE[17].CLK
clk => full_CALORIE_RATE[18].CLK
clk => full_CALORIE_RATE[19].CLK
ROWER_POWER[0] => Mult0.IN19
ROWER_POWER[0] => LPM_ROM:crc_table.ADDRESS[0]
ROWER_POWER[1] => Mult0.IN18
ROWER_POWER[1] => LPM_ROM:crc_table.ADDRESS[1]
ROWER_POWER[2] => Mult0.IN17
ROWER_POWER[2] => LPM_ROM:crc_table.ADDRESS[2]
ROWER_POWER[3] => Mult0.IN16
ROWER_POWER[3] => LPM_ROM:crc_table.ADDRESS[3]
BOAT_SPEED[0] <= BOAT_SPEED[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[1] <= BOAT_SPEED[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[2] <= BOAT_SPEED[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[3] <= BOAT_SPEED[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[4] <= BOAT_SPEED[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[5] <= BOAT_SPEED[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[6] <= BOAT_SPEED[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[7] <= BOAT_SPEED[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[8] <= BOAT_SPEED[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[9] <= BOAT_SPEED[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[10] <= BOAT_SPEED[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BOAT_SPEED[11] <= BOAT_SPEED[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[0] <= CALORIE_RATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[1] <= CALORIE_RATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[2] <= CALORIE_RATE[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[3] <= CALORIE_RATE[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[4] <= CALORIE_RATE[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[5] <= CALORIE_RATE[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[6] <= CALORIE_RATE[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[7] <= CALORIE_RATE[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[8] <= CALORIE_RATE[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[9] <= CALORIE_RATE[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[10] <= CALORIE_RATE[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CALORIE_RATE[11] <= CALORIE_RATE[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_speed_calories:power_stats|LPM_ROM:crc_table
address[0] => altrom:srom.address[0]
address[1] => altrom:srom.address[1]
address[2] => altrom:srom.address[2]
address[3] => altrom:srom.address[3]
inclock => altrom:srom.clocki
outclock => ~NO_FANOUT~
memenab => otri[11].OE
memenab => otri[10].OE
memenab => otri[9].OE
memenab => otri[8].OE
memenab => otri[7].OE
memenab => otri[6].OE
memenab => otri[5].OE
memenab => otri[4].OE
memenab => otri[3].OE
memenab => otri[2].OE
memenab => otri[1].OE
memenab => otri[0].OE
q[0] <= otri[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= otri[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= otri[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= otri[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= otri[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= otri[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= otri[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= otri[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= otri[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= otri[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= otri[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= otri[11].DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_speed_calories:power_stats|LPM_ROM:crc_table|altrom:srom
address[0] => altsyncram:rom_block.address_a[0]
address[1] => altsyncram:rom_block.address_a[1]
address[2] => altsyncram:rom_block.address_a[2]
address[3] => altsyncram:rom_block.address_a[3]
clocki => altsyncram:rom_block.clock0
clocko => ~NO_FANOUT~
q[0] <= altsyncram:rom_block.q_a[0]
q[1] <= altsyncram:rom_block.q_a[1]
q[2] <= altsyncram:rom_block.q_a[2]
q[3] <= altsyncram:rom_block.q_a[3]
q[4] <= altsyncram:rom_block.q_a[4]
q[5] <= altsyncram:rom_block.q_a[5]
q[6] <= altsyncram:rom_block.q_a[6]
q[7] <= altsyncram:rom_block.q_a[7]
q[8] <= altsyncram:rom_block.q_a[8]
q[9] <= altsyncram:rom_block.q_a[9]
q[10] <= altsyncram:rom_block.q_a[10]
q[11] <= altsyncram:rom_block.q_a[11]


|g07_lab5|g07_speed_calories:power_stats|LPM_ROM:crc_table|altrom:srom|altsyncram:rom_block
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_k601:auto_generated.address_a[0]
address_a[1] => altsyncram_k601:auto_generated.address_a[1]
address_a[2] => altsyncram_k601:auto_generated.address_a[2]
address_a[3] => altsyncram_k601:auto_generated.address_a[3]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_k601:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_k601:auto_generated.q_a[0]
q_a[1] <= altsyncram_k601:auto_generated.q_a[1]
q_a[2] <= altsyncram_k601:auto_generated.q_a[2]
q_a[3] <= altsyncram_k601:auto_generated.q_a[3]
q_a[4] <= altsyncram_k601:auto_generated.q_a[4]
q_a[5] <= altsyncram_k601:auto_generated.q_a[5]
q_a[6] <= altsyncram_k601:auto_generated.q_a[6]
q_a[7] <= altsyncram_k601:auto_generated.q_a[7]
q_a[8] <= altsyncram_k601:auto_generated.q_a[8]
q_a[9] <= altsyncram_k601:auto_generated.q_a[9]
q_a[10] <= altsyncram_k601:auto_generated.q_a[10]
q_a[11] <= altsyncram_k601:auto_generated.q_a[11]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|g07_lab5|g07_speed_calories:power_stats|LPM_ROM:crc_table|altrom:srom|altsyncram:rom_block|altsyncram_k601:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT


|g07_lab5|g07_controller:controller
clk => g07_BCD_testbed:decoder.clk
clk => seg4[0]~reg0.CLK
clk => seg4[1]~reg0.CLK
clk => seg4[2]~reg0.CLK
clk => seg4[3]~reg0.CLK
clk => seg4[4]~reg0.CLK
clk => seg4[5]~reg0.CLK
clk => seg4[6]~reg0.CLK
clk => seg3[0]~reg0.CLK
clk => seg3[1]~reg0.CLK
clk => seg3[2]~reg0.CLK
clk => seg3[3]~reg0.CLK
clk => seg3[4]~reg0.CLK
clk => seg3[5]~reg0.CLK
clk => seg3[6]~reg0.CLK
clk => seg2[0]~reg0.CLK
clk => seg2[1]~reg0.CLK
clk => seg2[2]~reg0.CLK
clk => seg2[3]~reg0.CLK
clk => seg2[4]~reg0.CLK
clk => seg2[5]~reg0.CLK
clk => seg2[6]~reg0.CLK
clk => seg1[0]~reg0.CLK
clk => seg1[1]~reg0.CLK
clk => seg1[2]~reg0.CLK
clk => seg1[3]~reg0.CLK
clk => seg1[4]~reg0.CLK
clk => seg1[5]~reg0.CLK
clk => seg1[6]~reg0.CLK
reset => g07_BCD_testbed:decoder.reset
en => ~NO_FANOUT~
switch[0] => Mux0.IN9
switch[0] => Mux1.IN9
switch[0] => Mux2.IN7
switch[0] => Mux3.IN7
switch[0] => Mux4.IN7
switch[0] => Mux5.IN7
switch[0] => Mux6.IN6
switch[0] => Mux7.IN6
switch[0] => Mux8.IN6
switch[0] => Mux9.IN6
switch[0] => Mux10.IN6
switch[0] => Mux11.IN6
switch[0] => Mux12.IN6
switch[0] => Mux13.IN6
switch[1] => Mux0.IN8
switch[1] => Mux1.IN8
switch[1] => Mux2.IN6
switch[1] => Mux3.IN6
switch[1] => Mux4.IN6
switch[1] => Mux5.IN6
switch[1] => Mux6.IN5
switch[1] => Mux7.IN5
switch[1] => Mux8.IN5
switch[1] => Mux9.IN5
switch[1] => Mux10.IN5
switch[1] => Mux11.IN5
switch[1] => Mux12.IN5
switch[1] => Mux13.IN5
switch[2] => Mux0.IN7
switch[2] => Mux1.IN7
switch[2] => Mux2.IN5
switch[2] => Mux3.IN5
switch[2] => Mux4.IN5
switch[2] => Mux5.IN5
switch[2] => Mux6.IN4
switch[2] => Mux7.IN4
switch[2] => Mux8.IN4
switch[2] => Mux9.IN4
switch[2] => Mux10.IN4
switch[2] => Mux11.IN4
switch[2] => Mux12.IN4
switch[2] => Mux13.IN4
strokes[0] => Mux13.IN7
strokes[1] => Mux12.IN7
strokes[2] => Mux11.IN7
strokes[3] => Mux10.IN7
strokes[4] => Mux9.IN7
strokes[5] => Mux8.IN7
strokes[6] => Mux7.IN7
strokes[7] => Mux6.IN7
strokes[8] => Mux5.IN8
strokes[9] => Mux4.IN8
strokes[10] => Mux3.IN8
strokes[11] => Mux2.IN8
strokes[12] => Mux1.IN10
strokes[13] => Mux0.IN10
speed[0] => Mux13.IN8
speed[1] => Mux12.IN8
speed[2] => Mux11.IN8
speed[3] => Mux10.IN8
speed[4] => Mux9.IN8
speed[5] => Mux8.IN8
speed[6] => Mux7.IN8
speed[7] => Mux6.IN8
speed[8] => Mux5.IN9
speed[9] => Mux4.IN9
speed[10] => Mux3.IN9
speed[11] => Mux2.IN9
rate[0] => Mux13.IN9
rate[1] => Mux12.IN9
rate[2] => Mux11.IN9
rate[3] => Mux10.IN9
rate[4] => Mux9.IN9
rate[5] => Mux8.IN9
rate[6] => Mux7.IN9
rate[7] => Mux6.IN9
kcal_rate[0] => Mux13.IN10
kcal_rate[1] => Mux12.IN10
kcal_rate[2] => Mux11.IN10
kcal_rate[3] => Mux10.IN10
kcal_rate[4] => Mux9.IN10
kcal_rate[5] => Mux8.IN10
kcal_rate[6] => Mux7.IN10
kcal_rate[7] => Mux6.IN10
kcal_rate[8] => Mux5.IN10
kcal_rate[9] => Mux4.IN10
kcal_rate[10] => Mux3.IN10
kcal_rate[11] => Mux2.IN10
seg1[0] <= seg1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[1] <= seg1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[2] <= seg1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[3] <= seg1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[4] <= seg1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[5] <= seg1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg1[6] <= seg1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[0] <= seg2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[1] <= seg2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[2] <= seg2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[3] <= seg2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[4] <= seg2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[5] <= seg2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg2[6] <= seg2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[0] <= seg3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[1] <= seg3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[2] <= seg3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[3] <= seg3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[4] <= seg3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[5] <= seg3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg3[6] <= seg3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[0] <= seg4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[1] <= seg4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[2] <= seg4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[3] <= seg4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[4] <= seg4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[5] <= seg4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg4[6] <= seg4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder
clk => g07_serial_binary_to_bcd:converter.clk
start => g07_serial_binary_to_bcd:converter.start
reset => g07_serial_binary_to_bcd:converter.reset
BIN[0] => ~NO_FANOUT~
BIN[1] => ~NO_FANOUT~
BIN[2] => ~NO_FANOUT~
BIN[3] => ~NO_FANOUT~
BIN[4] => ~NO_FANOUT~
BIN[5] => ~NO_FANOUT~
BIN[6] => ~NO_FANOUT~
BIN[7] => ~NO_FANOUT~
BIN[8] => ~NO_FANOUT~
BIN[9] => ~NO_FANOUT~
BIN[10] => ~NO_FANOUT~
BIN[11] => ~NO_FANOUT~
BIN[12] => ~NO_FANOUT~
BIN[13] => ~NO_FANOUT~
ready <= g07_serial_binary_to_bcd:converter.ready
out4[0] <= g07_7_segment_decoder_full:decoder.seg4[0]
out4[1] <= g07_7_segment_decoder_full:decoder.seg4[1]
out4[2] <= g07_7_segment_decoder_full:decoder.seg4[2]
out4[3] <= g07_7_segment_decoder_full:decoder.seg4[3]
out4[4] <= g07_7_segment_decoder_full:decoder.seg4[4]
out4[5] <= g07_7_segment_decoder_full:decoder.seg4[5]
out4[6] <= g07_7_segment_decoder_full:decoder.seg4[6]
out3[0] <= g07_7_segment_decoder_full:decoder.seg3[0]
out3[1] <= g07_7_segment_decoder_full:decoder.seg3[1]
out3[2] <= g07_7_segment_decoder_full:decoder.seg3[2]
out3[3] <= g07_7_segment_decoder_full:decoder.seg3[3]
out3[4] <= g07_7_segment_decoder_full:decoder.seg3[4]
out3[5] <= g07_7_segment_decoder_full:decoder.seg3[5]
out3[6] <= g07_7_segment_decoder_full:decoder.seg3[6]
out2[0] <= g07_7_segment_decoder_full:decoder.seg2[0]
out2[1] <= g07_7_segment_decoder_full:decoder.seg2[1]
out2[2] <= g07_7_segment_decoder_full:decoder.seg2[2]
out2[3] <= g07_7_segment_decoder_full:decoder.seg2[3]
out2[4] <= g07_7_segment_decoder_full:decoder.seg2[4]
out2[5] <= g07_7_segment_decoder_full:decoder.seg2[5]
out2[6] <= g07_7_segment_decoder_full:decoder.seg2[6]
out1[0] <= g07_7_segment_decoder_full:decoder.seg1[0]
out1[1] <= g07_7_segment_decoder_full:decoder.seg1[1]
out1[2] <= g07_7_segment_decoder_full:decoder.seg1[2]
out1[3] <= g07_7_segment_decoder_full:decoder.seg1[3]
out1[4] <= g07_7_segment_decoder_full:decoder.seg1[4]
out1[5] <= g07_7_segment_decoder_full:decoder.seg1[5]
out1[6] <= g07_7_segment_decoder_full:decoder.seg1[6]


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_serial_binary_to_bcd:converter
clk => shiftin.CLK
clk => \bin14_reg:binreg[0].CLK
clk => \bin14_reg:binreg[1].CLK
clk => \bin14_reg:binreg[2].CLK
clk => \bin14_reg:binreg[3].CLK
clk => \bin14_reg:binreg[4].CLK
clk => \bin14_reg:binreg[5].CLK
clk => \bin14_reg:binreg[6].CLK
clk => \bin14_reg:binreg[7].CLK
clk => \bin14_reg:binreg[8].CLK
clk => \bin14_reg:binreg[9].CLK
clk => \bin14_reg:binreg[10].CLK
clk => \bin14_reg:binreg[11].CLK
clk => \bin14_reg:binreg[12].CLK
clk => \bin14_reg:binreg[13].CLK
clk => ready~reg0.CLK
clk => regout[0].CLK
clk => regout[1].CLK
clk => regout[2].CLK
clk => regout[3].CLK
clk => regout[4].CLK
clk => regout[5].CLK
clk => regout[6].CLK
clk => regout[7].CLK
clk => regout[8].CLK
clk => regout[9].CLK
clk => regout[10].CLK
clk => regout[11].CLK
clk => regout[12].CLK
clk => regout[13].CLK
clk => regout[14].CLK
clk => regout[15].CLK
clk => \bcd16_reg:count[0].CLK
clk => \bcd16_reg:count[1].CLK
clk => \bcd16_reg:count[2].CLK
clk => \bcd16_reg:count[3].CLK
clk => \bcd16_reg:count[4].CLK
clk => \bcd16_reg:count[5].CLK
clk => \bcd16_reg:count[6].CLK
clk => \bcd16_reg:count[7].CLK
clk => \bcd16_reg:count[8].CLK
clk => \bcd16_reg:count[9].CLK
clk => \bcd16_reg:count[10].CLK
clk => \bcd16_reg:count[11].CLK
clk => \bcd16_reg:count[12].CLK
clk => \bcd16_reg:count[13].CLK
clk => \bcd16_reg:count[14].CLK
clk => \bcd16_reg:count[15].CLK
clk => \bcd16_reg:count[16].CLK
clk => \bcd16_reg:count[17].CLK
clk => \bcd16_reg:count[18].CLK
clk => \bcd16_reg:count[19].CLK
clk => \bcd16_reg:count[20].CLK
clk => \bcd16_reg:count[21].CLK
clk => \bcd16_reg:count[22].CLK
clk => \bcd16_reg:count[23].CLK
clk => \bcd16_reg:count[24].CLK
clk => \bcd16_reg:count[25].CLK
clk => \bcd16_reg:count[26].CLK
clk => \bcd16_reg:count[27].CLK
clk => \bcd16_reg:count[28].CLK
clk => \bcd16_reg:count[29].CLK
clk => \bcd16_reg:count[30].CLK
clk => \bcd16_reg:count[31].CLK
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => regout.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => ready.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => binreg.OUTPUTSELECT
start => shiftin.OUTPUTSELECT
reset => \bin14_reg:binreg[0].ACLR
reset => \bin14_reg:binreg[1].ACLR
reset => \bin14_reg:binreg[2].ACLR
reset => \bin14_reg:binreg[3].ACLR
reset => \bin14_reg:binreg[4].ACLR
reset => \bin14_reg:binreg[5].ACLR
reset => \bin14_reg:binreg[6].ACLR
reset => \bin14_reg:binreg[7].ACLR
reset => \bin14_reg:binreg[8].ACLR
reset => \bin14_reg:binreg[9].ACLR
reset => \bin14_reg:binreg[10].ACLR
reset => \bin14_reg:binreg[11].ACLR
reset => \bin14_reg:binreg[12].ACLR
reset => \bin14_reg:binreg[13].ACLR
reset => ready~reg0.ACLR
reset => regout[0].ACLR
reset => regout[1].ACLR
reset => regout[2].ACLR
reset => regout[3].ACLR
reset => regout[4].ACLR
reset => regout[5].ACLR
reset => regout[6].ACLR
reset => regout[7].ACLR
reset => regout[8].ACLR
reset => regout[9].ACLR
reset => regout[10].ACLR
reset => regout[11].ACLR
reset => regout[12].ACLR
reset => regout[13].ACLR
reset => regout[14].ACLR
reset => regout[15].ACLR
reset => \bcd16_reg:count[0].ACLR
reset => \bcd16_reg:count[1].ACLR
reset => \bcd16_reg:count[2].ACLR
reset => \bcd16_reg:count[3].ACLR
reset => \bcd16_reg:count[4].ACLR
reset => \bcd16_reg:count[5].ACLR
reset => \bcd16_reg:count[6].ACLR
reset => \bcd16_reg:count[7].ACLR
reset => \bcd16_reg:count[8].ACLR
reset => \bcd16_reg:count[9].ACLR
reset => \bcd16_reg:count[10].ACLR
reset => \bcd16_reg:count[11].ACLR
reset => \bcd16_reg:count[12].ACLR
reset => \bcd16_reg:count[13].ACLR
reset => \bcd16_reg:count[14].ACLR
reset => \bcd16_reg:count[15].ACLR
reset => \bcd16_reg:count[16].ACLR
reset => \bcd16_reg:count[17].ACLR
reset => \bcd16_reg:count[18].ACLR
reset => \bcd16_reg:count[19].ACLR
reset => \bcd16_reg:count[20].ACLR
reset => \bcd16_reg:count[21].ACLR
reset => \bcd16_reg:count[22].ACLR
reset => \bcd16_reg:count[23].ACLR
reset => \bcd16_reg:count[24].ACLR
reset => \bcd16_reg:count[25].ACLR
reset => \bcd16_reg:count[26].ACLR
reset => \bcd16_reg:count[27].ACLR
reset => \bcd16_reg:count[28].ACLR
reset => \bcd16_reg:count[29].ACLR
reset => \bcd16_reg:count[30].ACLR
reset => \bcd16_reg:count[31].ACLR
reset => shiftin.ENA
BIN[0] => binreg.DATAB
BIN[1] => binreg.DATAB
BIN[2] => binreg.DATAB
BIN[3] => binreg.DATAB
BIN[4] => binreg.DATAB
BIN[5] => binreg.DATAB
BIN[6] => binreg.DATAB
BIN[7] => binreg.DATAB
BIN[8] => binreg.DATAB
BIN[9] => binreg.DATAB
BIN[10] => binreg.DATAB
BIN[11] => binreg.DATAB
BIN[12] => binreg.DATAB
BIN[13] => binreg.DATAB
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
BCD4[0] <= regout[12].DB_MAX_OUTPUT_PORT_TYPE
BCD4[1] <= regout[13].DB_MAX_OUTPUT_PORT_TYPE
BCD4[2] <= regout[14].DB_MAX_OUTPUT_PORT_TYPE
BCD4[3] <= regout[15].DB_MAX_OUTPUT_PORT_TYPE
BCD3[0] <= regout[8].DB_MAX_OUTPUT_PORT_TYPE
BCD3[1] <= regout[9].DB_MAX_OUTPUT_PORT_TYPE
BCD3[2] <= regout[10].DB_MAX_OUTPUT_PORT_TYPE
BCD3[3] <= regout[11].DB_MAX_OUTPUT_PORT_TYPE
BCD2[0] <= regout[4].DB_MAX_OUTPUT_PORT_TYPE
BCD2[1] <= regout[5].DB_MAX_OUTPUT_PORT_TYPE
BCD2[2] <= regout[6].DB_MAX_OUTPUT_PORT_TYPE
BCD2[3] <= regout[7].DB_MAX_OUTPUT_PORT_TYPE
BCD1[0] <= regout[0].DB_MAX_OUTPUT_PORT_TYPE
BCD1[1] <= regout[1].DB_MAX_OUTPUT_PORT_TYPE
BCD1[2] <= regout[2].DB_MAX_OUTPUT_PORT_TYPE
BCD1[3] <= regout[3].DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_serial_binary_to_bcd:converter|g07_ADD3:add3_3
x4 => Mux0.IN11
x4 => Mux0.IN12
x4 => Mux0.IN13
x4 => Mux0.IN14
x4 => Mux0.IN15
x4 => Mux0.IN16
x4 => Mux1.IN11
x4 => Mux2.IN11
x4 => Mux3.IN11
x3 => Mux0.IN17
x3 => Mux1.IN12
x3 => Mux1.IN13
x3 => Mux1.IN14
x3 => Mux1.IN15
x3 => Mux1.IN16
x3 => Mux1.IN17
x3 => Mux2.IN12
x3 => Mux3.IN12
x2 => Mux0.IN18
x2 => Mux1.IN18
x2 => Mux2.IN13
x2 => Mux2.IN14
x2 => Mux2.IN15
x2 => Mux2.IN16
x2 => Mux2.IN17
x2 => Mux2.IN18
x2 => Mux3.IN13
x1 => Mux0.IN19
x1 => Mux1.IN19
x1 => Mux2.IN19
x1 => Mux3.IN14
x1 => Mux3.IN15
x1 => Mux3.IN16
x1 => Mux3.IN17
x1 => Mux3.IN18
x1 => Mux3.IN19
y4 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
y3 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
y2 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
y1 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_serial_binary_to_bcd:converter|g07_ADD3:add3_2
x4 => Mux0.IN11
x4 => Mux0.IN12
x4 => Mux0.IN13
x4 => Mux0.IN14
x4 => Mux0.IN15
x4 => Mux0.IN16
x4 => Mux1.IN11
x4 => Mux2.IN11
x4 => Mux3.IN11
x3 => Mux0.IN17
x3 => Mux1.IN12
x3 => Mux1.IN13
x3 => Mux1.IN14
x3 => Mux1.IN15
x3 => Mux1.IN16
x3 => Mux1.IN17
x3 => Mux2.IN12
x3 => Mux3.IN12
x2 => Mux0.IN18
x2 => Mux1.IN18
x2 => Mux2.IN13
x2 => Mux2.IN14
x2 => Mux2.IN15
x2 => Mux2.IN16
x2 => Mux2.IN17
x2 => Mux2.IN18
x2 => Mux3.IN13
x1 => Mux0.IN19
x1 => Mux1.IN19
x1 => Mux2.IN19
x1 => Mux3.IN14
x1 => Mux3.IN15
x1 => Mux3.IN16
x1 => Mux3.IN17
x1 => Mux3.IN18
x1 => Mux3.IN19
y4 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
y3 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
y2 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
y1 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_serial_binary_to_bcd:converter|g07_ADD3:add3_1
x4 => Mux0.IN11
x4 => Mux0.IN12
x4 => Mux0.IN13
x4 => Mux0.IN14
x4 => Mux0.IN15
x4 => Mux0.IN16
x4 => Mux1.IN11
x4 => Mux2.IN11
x4 => Mux3.IN11
x3 => Mux0.IN17
x3 => Mux1.IN12
x3 => Mux1.IN13
x3 => Mux1.IN14
x3 => Mux1.IN15
x3 => Mux1.IN16
x3 => Mux1.IN17
x3 => Mux2.IN12
x3 => Mux3.IN12
x2 => Mux0.IN18
x2 => Mux1.IN18
x2 => Mux2.IN13
x2 => Mux2.IN14
x2 => Mux2.IN15
x2 => Mux2.IN16
x2 => Mux2.IN17
x2 => Mux2.IN18
x2 => Mux3.IN13
x1 => Mux0.IN19
x1 => Mux1.IN19
x1 => Mux2.IN19
x1 => Mux3.IN14
x1 => Mux3.IN15
x1 => Mux3.IN16
x1 => Mux3.IN17
x1 => Mux3.IN18
x1 => Mux3.IN19
y4 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
y3 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
y2 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
y1 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_serial_binary_to_bcd:converter|g07_ADD3:add3_0
x4 => Mux0.IN11
x4 => Mux0.IN12
x4 => Mux0.IN13
x4 => Mux0.IN14
x4 => Mux0.IN15
x4 => Mux0.IN16
x4 => Mux1.IN11
x4 => Mux2.IN11
x4 => Mux3.IN11
x3 => Mux0.IN17
x3 => Mux1.IN12
x3 => Mux1.IN13
x3 => Mux1.IN14
x3 => Mux1.IN15
x3 => Mux1.IN16
x3 => Mux1.IN17
x3 => Mux2.IN12
x3 => Mux3.IN12
x2 => Mux0.IN18
x2 => Mux1.IN18
x2 => Mux2.IN13
x2 => Mux2.IN14
x2 => Mux2.IN15
x2 => Mux2.IN16
x2 => Mux2.IN17
x2 => Mux2.IN18
x2 => Mux3.IN13
x1 => Mux0.IN19
x1 => Mux1.IN19
x1 => Mux2.IN19
x1 => Mux3.IN14
x1 => Mux3.IN15
x1 => Mux3.IN16
x1 => Mux3.IN17
x1 => Mux3.IN18
x1 => Mux3.IN19
y4 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
y3 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
y2 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
y1 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_7_segment_decoder_full:decoder
BCD1[0] => g07_7_segment_decoder:i1.code[0]
BCD1[1] => g07_7_segment_decoder:i1.code[1]
BCD1[2] => g07_7_segment_decoder:i1.code[2]
BCD1[3] => g07_7_segment_decoder:i1.code[3]
BCD2[0] => g07_7_segment_decoder:i2.code[0]
BCD2[1] => g07_7_segment_decoder:i2.code[1]
BCD2[2] => g07_7_segment_decoder:i2.code[2]
BCD2[3] => g07_7_segment_decoder:i2.code[3]
BCD3[0] => g07_7_segment_decoder:i3.code[0]
BCD3[1] => g07_7_segment_decoder:i3.code[1]
BCD3[2] => g07_7_segment_decoder:i3.code[2]
BCD3[3] => g07_7_segment_decoder:i3.code[3]
BCD4[0] => g07_7_segment_decoder:i4.code[0]
BCD4[1] => g07_7_segment_decoder:i4.code[1]
BCD4[2] => g07_7_segment_decoder:i4.code[2]
BCD4[3] => g07_7_segment_decoder:i4.code[3]
seg1[0] <= g07_7_segment_decoder:i1.segments[0]
seg1[1] <= g07_7_segment_decoder:i1.segments[1]
seg1[2] <= g07_7_segment_decoder:i1.segments[2]
seg1[3] <= g07_7_segment_decoder:i1.segments[3]
seg1[4] <= g07_7_segment_decoder:i1.segments[4]
seg1[5] <= g07_7_segment_decoder:i1.segments[5]
seg1[6] <= g07_7_segment_decoder:i1.segments[6]
seg2[0] <= g07_7_segment_decoder:i2.segments[0]
seg2[1] <= g07_7_segment_decoder:i2.segments[1]
seg2[2] <= g07_7_segment_decoder:i2.segments[2]
seg2[3] <= g07_7_segment_decoder:i2.segments[3]
seg2[4] <= g07_7_segment_decoder:i2.segments[4]
seg2[5] <= g07_7_segment_decoder:i2.segments[5]
seg2[6] <= g07_7_segment_decoder:i2.segments[6]
seg3[0] <= g07_7_segment_decoder:i3.segments[0]
seg3[1] <= g07_7_segment_decoder:i3.segments[1]
seg3[2] <= g07_7_segment_decoder:i3.segments[2]
seg3[3] <= g07_7_segment_decoder:i3.segments[3]
seg3[4] <= g07_7_segment_decoder:i3.segments[4]
seg3[5] <= g07_7_segment_decoder:i3.segments[5]
seg3[6] <= g07_7_segment_decoder:i3.segments[6]
seg4[0] <= g07_7_segment_decoder:i4.segments[0]
seg4[1] <= g07_7_segment_decoder:i4.segments[1]
seg4[2] <= g07_7_segment_decoder:i4.segments[2]
seg4[3] <= g07_7_segment_decoder:i4.segments[3]
seg4[4] <= g07_7_segment_decoder:i4.segments[4]
seg4[5] <= g07_7_segment_decoder:i4.segments[5]
seg4[6] <= g07_7_segment_decoder:i4.segments[6]


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_7_segment_decoder_full:decoder|g07_7_segment_decoder:i4
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => isZero.IN1
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => isZero.IN1
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => isZero.IN0
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => isZero.IN1
RippleBlank_In => blank_out.IN1
RippleBlank_Out <= blank_out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_7_segment_decoder_full:decoder|g07_7_segment_decoder:i3
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => isZero.IN1
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => isZero.IN1
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => isZero.IN0
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => isZero.IN1
RippleBlank_In => blank_out.IN1
RippleBlank_Out <= blank_out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_7_segment_decoder_full:decoder|g07_7_segment_decoder:i2
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => isZero.IN1
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => isZero.IN1
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => isZero.IN0
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => isZero.IN1
RippleBlank_In => blank_out.IN1
RippleBlank_Out <= blank_out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g07_lab5|g07_controller:controller|g07_BCD_testbed:decoder|g07_7_segment_decoder_full:decoder|g07_7_segment_decoder:i1
code[0] => Mux0.IN36
code[0] => Mux1.IN36
code[0] => Mux2.IN36
code[0] => Mux3.IN36
code[0] => Mux4.IN36
code[0] => Mux5.IN36
code[0] => Mux6.IN36
code[0] => isZero.IN1
code[1] => Mux0.IN35
code[1] => Mux1.IN35
code[1] => Mux2.IN35
code[1] => Mux3.IN35
code[1] => Mux4.IN35
code[1] => Mux5.IN35
code[1] => Mux6.IN35
code[1] => isZero.IN1
code[2] => Mux0.IN34
code[2] => Mux1.IN34
code[2] => Mux2.IN34
code[2] => Mux3.IN34
code[2] => Mux4.IN34
code[2] => Mux5.IN34
code[2] => Mux6.IN34
code[2] => isZero.IN0
code[3] => Mux0.IN33
code[3] => Mux1.IN33
code[3] => Mux2.IN33
code[3] => Mux3.IN33
code[3] => Mux4.IN33
code[3] => Mux5.IN33
code[3] => Mux6.IN33
code[3] => isZero.IN1
RippleBlank_In => blank_out.IN1
RippleBlank_Out <= blank_out.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


